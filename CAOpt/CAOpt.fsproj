<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Version>3.0.6</Version>
    <Authors>Faisal Waris</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/fwaris/CALib</PackageProjectUrl>
    <RepositoryUrl>https://github.com/fwaris/CALib</RepositoryUrl>
    <PackageIcon>CAIcon.PNG</PackageIcon>
    <Copyright>Copyright Faisal Waris ©  2020</Copyright>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageTags>optimization</PackageTags>
	<IncludeSymbols>true</IncludeSymbols>
    <Description>Cultural Algorithms optimization framework for mixed integer, dynamic optimization problems. This method uses an ensmble of search strategies. The dynamic balance between the strategies is maintained by a game-theoretic heuristic.
</Description>
    <RepositoryType>git</RepositoryType>
	<PackageReleaseNotes>Breaking. Added maxParallelism option to step call. Can be used to reduce resource consumption if fitness function is resource intensive </PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;CA_RUNTIME</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE;CA_RUNTIME</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="AssemblyInfo.fs" />
    <Compile Include="..\CALib\AsyncExts.fs" Link="AsyncExts.fs" />
    <Compile Include="..\CALib\Probability.fs" Link="Probability.fs" />
    <Compile Include="..\CALib\CA.fs" Link="CA.fs" />
    <Compile Include="..\CALib\CAUtils.fs" Link="CAUtils.fs" />
    <Compile Include="..\CALib\CAEvolve.fs" Link="CAEvolve.fs" />
    <Compile Include="..\CALib\BeliefSpace\DiffEvolutionKS.fs" Link="BeliefSpace\DiffEvolutionKS.fs" />
    <Compile Include="..\CALib\BeliefSpace\DomainKS.fs" Link="BeliefSpace\DomainKS.fs" />
    <Compile Include="..\CALib\BeliefSpace\DomainHybridKS.fs" Link="BeliefSpace\DomainHybridKS.fs" />
    <Compile Include="..\CALib\BeliefSpace\HistoricalKS.fs" Link="BeliefSpace\HistoricalKS.fs" />
    <Compile Include="..\CALib\BeliefSpace\KMeans.fs" Link="BeliefSpace\KMeans.fs" />
    <Compile Include="..\CALib\BeliefSpace\NormativeKS.fs" Link="BeliefSpace\NormativeKS.fs" />
    <Compile Include="..\CALib\BeliefSpace\SituationalKS.fs" Link="BeliefSpace\SituationalKS.fs" />
    <Compile Include="..\CALib\BeliefSpace\TopographicKS.fs" Link="BeliefSpace\TopographicKS.fs" />
    <Compile Include="..\CALib\KnowledgeDistribution\KDContinousStrategyGame.fs" Link="KnowledgeDistribution\KDContinousStrategyGame.fs" />
    <Compile Include="..\CALib\KnowledgeDistribution\KDStagHuntStatic.fs" Link="KnowledgeDistribution\KDStagHuntStatic.fs" />
    <Compile Include="..\CALib\CARunner.fs" Link="CARunner.fs" />
    <Compile Include="..\CALib\API.fs" Link="API.fs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FSharp.Collections.ParallelSeq" Version="1.2.0" />
    <PackageReference Include="FSharp.Control.AsyncSeq" Version="3.2.1" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.13.0" />
    <PackageReference Include="MSTest.TestAdapter" Version="3.8.3" />
    <PackageReference Include="MSTest.TestFramework" Version="3.8.3" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="FSharp.Core" Version="9.0.202" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\CAIcon.PNG">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CaLibCore\CaLibCore.fsproj" />
  </ItemGroup>

</Project>
